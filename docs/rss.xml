<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>Blog</title><link>https://blog.cpuck.com</link><description>Description</description><copyright>Blog</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://github.githubassets.com/favicons/favicon.svg</url><title>avatar</title><link>https://blog.cpuck.com</link></image><lastBuildDate>Sun, 20 Jul 2025 04:42:53 +0000</lastBuildDate><managingEditor>Blog</managingEditor><ttl>60</ttl><webMaster>Blog</webMaster><item><title>md5处理文件</title><link>https://blog.cpuck.com/post/md5-chu-li-wen-jian.html</link><description>## 删除MD5值相同的文件

通过MD5值把重复的文件移到del文件夹，表格记录。</description><guid isPermaLink="true">https://blog.cpuck.com/post/md5-chu-li-wen-jian.html</guid><pubDate>Sun, 20 Jul 2025 04:42:26 +0000</pubDate></item><item><title>同步代码</title><link>https://blog.cpuck.com/post/tong-bu-dai-ma.html</link><description>## 常用的 Git 命令

更新端口刷新DNS

```
git config --global http.proxy 127.0.0.1:7890
git config --global https.proxy 127.0.0.1:7890
ipconfig/flushdns
```
### 代码仓库拉取推送

- https://github.com/settings/ssh/new
- https://huggingface.co/settings/keys/add?type=ssh

拉取仓库本地到本地推送到远程仓库

```
git clone https://github.com/lllyasviel/Fooocus.git
git config --global user.email 'you@example.com'
git config --global user.name 'Your Name'
git remote set-url origin git@github.com:lllyasviel/Fooocus.git
ssh-keygen -t rsa -b 4096 -C 'your_email@example.com'
ssh -T git@github.com
git add . 
git commit -m 'Test' 
```

本地推送到远程仓库
```
git push origin main
```
远程仓库同步到本地 
```
git pull origin main  
```

### 1. **克隆远程仓库**

克隆一个远程仓库到本地，命令如下：

```bash
git clone https://github.com/lllyasviel/Fooocus.git
```

### 2. **检查当前 Git 配置**

查看 Git 的全局配置，如用户名和邮箱：

```bash
git config --list
```

### 3. **检查当前状态**

查看当前工作目录和暂存区的状态（哪些文件已修改、未跟踪等）：

```bash
git status
```

### 4. **添加文件到暂存区**

将文件添加到暂存区，准备提交：

```bash
git add &lt;file_name&gt;  # 添加指定文件
git add .  # 添加所有修改的文件
```

### 5. **提交更改**

提交更改并添加提交信息：

```bash
git commit -m '描述本次提交的内容'
```

### 6. **推送远程仓库**

将本地更改推送到远程仓库：

```bash
git push origin branch-name
```

### 7. **远程仓库更新**

拉取远程仓库的更新，并合并到当前分支：

```bash
git pull origin branch-name
```

### 8. **查看远程仓库信息**

查看当前项目的远程仓库地址：

```bash
git remote -v
```

### 9. **查看提交历史**

查看提交历史记录：

```bash
git log
```

### 10. **创建新分支**

创建一个新分支，并切换到该分支：

```bash
git checkout -b new-branch-name
```

### 11. **切换分支**

切换到已有的分支：

```bash
git checkout branch-name
```

### 12. **合并分支**

将当前分支合并到目标分支：

```bash
git merge branch-name
```。</description><guid isPermaLink="true">https://blog.cpuck.com/post/tong-bu-dai-ma.html</guid><pubDate>Sun, 20 Jul 2025 04:41:37 +0000</pubDate></item><item><title>查找代码</title><link>https://blog.cpuck.com/post/cha-zhao-dai-ma.html</link><description>## Windows 查找
```
Get-ChildItem -Recurse -File | Select-String -Pattern '56'
```
## Bash 查找
搜索匹配当前目录下所有文件名或文件里的内容打印显示行号
```
grep -rn 'Money' *
```
搜索多个文件并查找匹配文本在哪些文件中：
```
grep -l 'Money' file1 file2 file3...
```
查找 formatting.php 文件内 length’, 55 替换 length’, 56 :

```
sed -i s/'length', 55'/'length', 56'/g `grep 'length', 55' -rl --include='formatting.php' ./`
```。</description><guid isPermaLink="true">https://blog.cpuck.com/post/cha-zhao-dai-ma.html</guid><pubDate>Sun, 20 Jul 2025 04:40:46 +0000</pubDate></item><item><title>NextChat</title><link>https://blog.cpuck.com/post/NextChat.html</link><description>

✨ Light and Fast AI Assistant,with Claude, DeepSeek, GPT4 &amp; Gemini Pro support. 


[NextChatAI](https://nextchat.club?utm_source=readme) / [Web App Demo](https://app.nextchat.dev) / [Desktop App](https://github.com/Yidadaa/ChatGPT-Next-Web/releases) / [Discord](https://discord.gg/YCkeafCafC) / [Enterprise Edition](#enterprise-edition) / [Twitter](https://twitter.com/NextChatDev)


[saas-url]: https://nextchat.club?utm_source=readme
[saas-image]: https://img.shields.io/badge/NextChat-Saas-green?logo=microsoftedge
[web-url]: https://app.nextchat.dev/
[download-url]: https://github.com/Yidadaa/ChatGPT-Next-Web/releases
[Web-image]: https://img.shields.io/badge/Web-PWA-orange?logo=microsoftedge
[Windows-image]: https://img.shields.io/badge/-Windows-blue?logo=windows
[MacOS-image]: https://img.shields.io/badge/-MacOS-black?logo=apple
[Linux-image]: https://img.shields.io/badge/-Linux-333?logo=ubuntu

[&lt;img src='https://zeabur.com/button.svg' alt='Deploy on Zeabur' height='30'&gt;](https://zeabur.com/templates/ZBUEFA) [&lt;img src='https://vercel.com/button' alt='Deploy on Vercel' height='30'&gt;](https://vercel.com/new/clone?repository-url=https%3A%2F%2Fgithub.com%2FChatGPTNextWeb%2FChatGPT-Next-Web&amp;env=OPENAI_API_KEY&amp;env=CODE&amp;project-name=nextchat&amp;repository-name=NextChat)  [&lt;img src='https://gitpod.io/button/open-in-gitpod.svg' alt='Open in Gitpod' height='30'&gt;](https://gitpod.io/#https://github.com/ChatGPTNextWeb/NextChat) 

[&lt;img src='https://github.com/user-attachments/assets/903482d4-3e87-4134-9af1-f2588fa90659' height='50' width='' &gt;](https://monica.im/?utm=nxcrp)



## Dokploy

Dokploy 是一个免费的、可自托管的平台即服务 （PaaS），可简化应用程序和数据库的部署和管理。</description><guid isPermaLink="true">https://blog.cpuck.com/post/NextChat.html</guid><pubDate>Sat, 19 Jul 2025 20:47:38 +0000</pubDate></item><item><title>创建博客</title><link>https://blog.cpuck.com/post/chuang-jian-bo-ke.html</link><description>## 安装步骤

1. 【创建仓库】点击[通过模板创建仓库](https://github.com/new?template_name=Gmeek-template&amp;template_owner=Meekdai)，建议仓库名称为`XXX.github.io`，其中`XXX`为你的github用户名。</description><guid isPermaLink="true">https://blog.cpuck.com/post/chuang-jian-bo-ke.html</guid><pubDate>Sat, 19 Jul 2025 17:50:50 +0000</pubDate></item></channel></rss>